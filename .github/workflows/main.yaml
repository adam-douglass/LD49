name: Build and Deploy Release Branch

on:
  push: { branches: [main] }

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_VERSION: 2020.3.5f1

jobs:
  build:
    name: Build my ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - targetPlatform: StandaloneOSX # Build a macOS standalone (Intel 64-bit).
            build: true
            itchChannel: osx
            uploadBuild: true
          - targetPlatform: StandaloneWindows # Build a Windows standalone.
            build: true
            itchChannel: win
            uploadBuild: true
          - targetPlatform: StandaloneWindows64 # Build a Windows 64-bit standalone.
            build: true
            itchChannel: win64
            uploadBuild: true
          - targetPlatform: StandaloneLinux64 # Build a Linux 64-bit standalone.
            build: true
            itchChannel: linux64
            uploadBuild: true
          - targetPlatform: iOS # Build an iOS player.
            build: false # Makes a very large build, ignore for now
            itchChannel: osx
            uploadBuild: false
          - targetPlatform: Android # Build an Android .apk standalone app.
            build: true
            itchChannel: android
            uploadBuild: false
          - targetPlatform: WebGL # WebGL.
            build: true
            itchChannel: HTML5
            uploadBuild: true
      
    steps:
      - name: Free Disk Space
        if: matrix.build == true
        run: |
          echo "Disk space before:"
          df -h
          rm -rf /usr/share/dotnet/
          rm -rf "/usr/local/share/boost"
          rm -rf "$AGENT_TOOLSDIRECTORY"
          echo "Disk space after:"
          df -h
          
      # Get short SHA
      - name: Get short SHA
        if: matrix.build == true
        id: slug
        run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
          
      # Checkout
      - name: Checkout repository
        if: matrix.build == true
        uses: actions/checkout@v2
        with:
          lfs: true
          
      # Cache
      - name: Cache
        if: matrix.build == true
        uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library
      
      # Test
      - name: Run tests
        if: matrix.build == true
        uses: game-ci/unity-test-runner@v2
        env:
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          unityVersion: ${{ secrets.UNITY_VERSION }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
      
      # Build
      - name: Build project for ${{ matrix.targetPlatform }} platform
        if: matrix.build == true
        uses: game-ci/unity-builder@v2
        env: 
            UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          unityVersion: ${{ secrets.UNITY_VERSION }}
          allowDirtyBuild: true
      
      # Output
      - name: Upload ${{ matrix.targetPlatform }} Artifacts
        if: matrix.build == true
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
      
      # Upload WebGL to itch
      - name: Upload ${{ matrix.targetPlatform }} to Itch
        if: matrix.uploadBuild == true || matrix.build == true
        uses: josephbmanley/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: ${{ matrix.itchChannel }}
          ITCH_GAME: uaud-sandwich
          ITCH_USER: mmason
          PACKAGE: build/${{ matrix.targetPlatform }}
          VERSION: ${{ steps.slug.outputs.sha8 }}